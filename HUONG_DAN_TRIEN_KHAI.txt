=================================================================
HƯỚNG DẪN TRIỂN KHAI TERRAFORM CHO DỰ ÁN MAPAPP-DEVSECOPS
=================================================================

I. CHUẨN BỊ BAN ĐẦU
===================

1. Yêu cầu hệ thống:
   - AWS CLI đã cài đặt và cấu hình
   - Terraform >= 1.0 đã cài đặt
   - kubectl đã cài đặt
   - Git đã cài đặt

2. Cấu hình AWS CLI:
   aws configure
   # Nhập AWS Access Key ID
   # Nhập AWS Secret Access Key
   # Region: ap-southeast-1
   # Output format: json

3. Kiểm tra kết nối AWS:
   aws sts get-caller-identity
   
   Kết quả mong đợi:
   {
       "UserId": "AIDACKCEVSQ6C2EXAMPLE",
       "Account": "123456789012",
       "Arn": "arn:aws:iam::123456789012:user/your-username"
   }

II. THIẾT LẬP BACKEND TERRAFORM (BƯỚC QUAN TRỌNG NHẤT)
======================================================

1. Tạo S3 Bucket cho Terraform State:
   aws s3api create-bucket \
     --bucket mapapp-terraform-state-storage \
     --region ap-southeast-1 \
     --create-bucket-configuration LocationConstraint=ap-southeast-1

   Kết quả mong đợi:
   {
       "Location": "http://mapapp-terraform-state-storage.s3.amazonaws.com/"
   }

2. Bật versioning cho S3 bucket:
   aws s3api put-bucket-versioning \
     --bucket mapapp-terraform-state-storage \
     --versioning-configuration Status=Enabled

3. Bật mã hóa cho S3 bucket:
   aws s3api put-bucket-encryption \
     --bucket mapapp-terraform-state-storage \
     --server-side-encryption-configuration '{
       "Rules": [
         {
           "ApplyServerSideEncryptionByDefault": {
             "SSEAlgorithm": "AES256"
           }
         }
       ]
     }'

4. Tạo DynamoDB table cho Terraform locking:
   aws dynamodb create-table \
     --table-name mapapp-terraform-state-lock \
     --attribute-definitions AttributeName=LockID,AttributeType=S \
     --key-schema AttributeName=LockID,KeyType=HASH \
     --billing-mode PAY_PER_REQUEST

   Kết quả mong đợi:
   {
       "TableDescription": {
           "TableName": "mapapp-terraform-state-lock",
           "TableStatus": "CREATING",
           ...
       }
   }

5. Kiểm tra DynamoDB table đã sẵn sàng:
   aws dynamodb describe-table --table-name mapapp-terraform-state-lock

   Đợi cho đến khi TableStatus: "ACTIVE"

III. TRIỂN KHAI MÔI TRƯỜNG DEV
==============================

1. Di chuyển vào thư mục môi trường Dev:
   cd environments/dev

2. Khởi tạo Terraform (lần đầu tiên):
   terraform init -backend-config="key=dev/terraform.tfstate"

   Kết quả mong đợi:
   Initializing the backend...
   Initializing provider plugins...
   ...
   Terraform has been successfully initialized!

3. Xem kế hoạch triển khai:
   terraform plan -var-file="terraform.tfvars"

   Kết quả mong đợi sẽ hiển thị:
   Plan: XX to add, 0 to change, 0 to destroy.

4. Áp dụng cấu hình (CẨN THẬN - BƯỚC NÀY TẠO TÀI NGUYÊN AWS):
   terraform apply -var-file="terraform.tfvars"

   Nhập "yes" để xác nhận khi được hỏi.

   Quá trình này mất khoảng 15-20 phút.

5. Kiểm tra kết quả triển khai:

   a) Kiểm tra VPC:
      aws ec2 describe-vpcs --filters "Name=tag:Name,Values=mapapp-dev-vpc"
      
      Kết quả mong đợi: 1 VPC với CIDR 10.0.0.0/16

   b) Kiểm tra EKS Cluster:
      aws eks describe-cluster --name mapapp-dev-eks --region ap-southeast-1
      
      Kết quả mong đợi: Status "ACTIVE"

   c) Kiểm tra Node Group:
      aws eks describe-nodegroup --cluster-name mapapp-dev-eks --nodegroup-name mapapp-dev-nodes
      
      Kết quả mong đợi: Status "ACTIVE", DesiredSize: 2

   d) Kiểm tra RDS MySQL:
      aws rds describe-db-instances --db-instance-identifier mapapp-dev-mysql
      
      Kết quả mong đợi: DBInstanceStatus "available"

   e) Kiểm tra DocumentDB:
      aws docdb describe-db-clusters --db-cluster-identifier mapapp-dev-docdb
      
      Kết quả mong đợi: Status "available"

   f) Kiểm tra ElastiCache Redis:
      aws elasticache describe-cache-clusters --cache-cluster-id mapapp-dev-redis
      
      Kết quả mong đợi: CacheClusterStatus "available"

6. Cấu hình kubectl cho EKS:
   aws eks update-kubeconfig --region ap-southeast-1 --name mapapp-dev-eks

7. Kiểm tra kết nối Kubernetes:
   kubectl get nodes

   Kết quả mong đợi:
   NAME                                         STATUS   ROLES    AGE   VERSION
   ip-10-0-101-xxx.ap-southeast-1.compute...   Ready    <none>   5m    v1.30.x
   ip-10-0-102-xxx.ap-southeast-1.compute...   Ready    <none>   5m    v1.30.x

8. Kiểm tra pods hệ thống:
   kubectl get pods -n kube-system

   Kết quả mong đợi: Tất cả pods trong trạng thái Running

IV. XỬ LÝ LỖI THƯỜNG GẶP
========================

1. Lỗi "bucket already exists":
   - Thay đổi tên bucket trong file backend.tf thành tên duy nhất
   - Ví dụ: mapapp-terraform-state-storage-<your-initials>-<random-number>

2. Lỗi "InvalidUserID.NotFound":
   - Kiểm tra AWS credentials đã đúng chưa
   - Chạy: aws sts get-caller-identity

3. Lỗi "terraform init" thất bại:
   - Xóa thư mục .terraform và chạy lại terraform init

4. Lỗi "EKS cluster creation timeout":
   - Đây là bình thường, EKS cần 10-15 phút để tạo
   - Kiểm tra trên AWS Console để theo dõi tiến trình

5. Lỗi "Node group not ready":
   - Đợi thêm 5-10 phút sau khi cluster ready
   - Kiểm tra IAM roles đã được tạo đúng chưa

V. TRIỂN KHAI MÔI TRƯỜNG PROD (SAU KHI DEV HOÀN THÀNH)
======================================================

1. Di chuyển vào thư mục Prod:
   cd ../prod

2. Khởi tạo Terraform cho Prod:
   terraform init -backend-config="key=prod/terraform.tfstate"

3. Xem kế hoạch:
   terraform plan -var-file="terraform.tfvars"

4. Áp dụng (CẨN THẬN - CHI PHÍ CAO HỚN):
   terraform apply -var-file="terraform.tfvars"

VI. KIỂM TRA TỔNG THỂ SAU KHI HOÀN THÀNH
========================================

1. Kiểm tra tất cả tài nguyên đã được tạo:
   
   Dev Environment:
   - VPC: mapapp-dev-vpc (10.0.0.0/16)
   - EKS: mapapp-dev-eks (2 nodes t3.medium)
   - RDS: mapapp-dev-mysql (single AZ)
   - DocumentDB: mapapp-dev-docdb (1 instance)
   - Redis: mapapp-dev-redis (1 node)
   - EFS: mapapp-dev-efs
   - Key Pair: mapapp-dev-eks-key

   Prod Environment (nếu triển khai):
   - VPC: mapapp-prod-vpc (10.1.0.0/16)
   - EKS: mapapp-prod-eks (3 nodes t3.large)
   - RDS: mapapp-prod-mysql (Multi-AZ)
   - DocumentDB: mapapp-prod-docdb (2 instances)
   - Redis: mapapp-prod-redis (with replica)
   - EFS: mapapp-prod-efs
   - Key Pair: mapapp-prod-eks-key

2. Kiểm tra chi phí AWS:
   aws ce get-cost-and-usage \
     --time-period Start=2025-06-01,End=2025-06-16 \
     --granularity DAILY \
     --metrics BlendedCost

VII. DỌन DẸP (KHI KHÔNG CẦN THIẾT)
==================================

1. Xóa môi trường Dev:
   cd environments/dev
   terraform destroy -var-file="terraform.tfvars"

2. Xóa môi trường Prod:
   cd environments/prod
   terraform destroy -var-file="terraform.tfvars"

3. Xóa S3 bucket và DynamoDB table:
   aws s3 rb s3://mapapp-terraform-state-storage --force
   aws dynamodb delete-table --table-name mapapp-terraform-state-lock

VIII. LIÊN HỆ VÀ HỖ TRỢ
=======================

Nếu gặp vấn đề trong quá trình triển khai:
1. Kiểm tra log chi tiết từ terraform apply
2. Kiểm tra AWS CloudTrail để xem lỗi API
3. Sử dụng terraform state list để xem tài nguyên đã tạo
4. Sử dụng terraform state show <resource> để xem chi tiết resource

CHÚ Ý QUAN TRỌNG:
- Luôn chạy terraform plan trước khi apply
- Backup terraform.tfstate thường xuyên
- Theo dõi chi phí AWS định kỳ
- Không commit AWS credentials vào Git
- Sử dụng môi trường Dev để test trước khi lên Prod

=================================================================
KẾT THÚC HƯỚNG DẪN
=================================================================
